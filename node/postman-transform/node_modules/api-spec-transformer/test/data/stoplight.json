{
  "project": {
    "name": "Test Project",
    "description": "",
    "environment": {
      "forwardHost": "http://localhost:3000",
      "basePath": "",
      "produces": ["application/json"],
      "consumes": ["application/json"],
      "protocols": [
        "http",
        "https",
        "ws"
      ],
      "version": "1.0.0",
      "middlewareBefore": "",
      "middlewareAfter": "",
      "proxy": {},
      "resourcesOrder": {
        "utilFuncs": [],
        "docs": []
      },
      "securitySchemes": {
        "apikey": {
          "queryString": [],
          "headers": []
        },
        "basic": {
          "name": "",
          "value": "",
          "description": ""
        },
        "oauth2": {
          "authorizationUrl": "",
          "tokenUrl": "",
          "flow": "implicit",
          "scopes": []
        }
      }
    },
    "endpoints": [
      {
        "_id": null,
        "name": "addPetPhoto",
        "description": "Upload a new pet photo",
        "summary": "",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "request": {
          "method": "post",
          "path": "/pets/{petName}/photos",
          "pathParams": {},
          "headers": "{\"type\":\"object\",\"properties\":{},\"required\":[]}",
          "queryString": "{\"type\":\"object\",\"properties\":{},\"required\":[]}",
          "bodies": [
            {
              "body": "{\"properties\":{\"id\":{\"description\":\"The photo ID (generated automatically)\",\"type\":\"integer\"},\"label\":{\"description\":\"A label for the photo\",\"type\":\"string\"},\"description\":{\"description\":\"An optional description of the photo\",\"type\":\"string\"},\"photo\":{\"description\":\"The pet photo\",\"type\":\"file\"}},\"required\":[\"label\",\"photo\"]}",
              "example": ""
            }
          ]
        },
        "responses": [
          {
            "codes": [
              400
            ],
            "headers": "{\n  \"type\": \"object\",\n  \"properties\": {}\n}",
            "body": "{\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"The auto-generated photo ID\"},\"label\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"photo\":{\"description\":\"Information about the photo (size, file name, etc.)\"}}}",
            "example": "",
            "description": "Returns the photo information"
          }
        ],
        "middlewareBefore": "",
        "middlewareAfter": "",
        "mock": {
          "enabled": null,
          "statusCode": null
        },
        "securedBy": {
          "none": true
        }
      },
      {
        "_id": null,
        "name": "deletePets",
        "description": "Deletes all pets, optionally filtered by one or more criteria",
        "summary": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "request": {
          "method": "delete",
          "path": "/pets",
          "pathParams": {},
          "headers": "{\"type\":\"object\",\"properties\":{\"token\":{\"type\":\"string\",\"description\":\"\"}},\"required\":[\"token\"]}",
          "queryString": "{\"type\":\"object\",\"properties\":{\"tags\":{\"type\":\"array\",\"description\":\"Filters pets by one or more tags\",\"items\":{\"type\":\"string\"}},\"type\":{\"type\":\"string\",\"description\":\"Filters pets by type (dog, cat, or bird)\"},\"age\":{\"type\":\"integer\",\"description\":\"Filters pets by age\"},\"dob\":{\"type\":\"string\",\"description\":\"Filters pets by date of birth\"},\"address.city\":{\"type\":\"string\",\"description\":\"Filters pets by city\"},\"address.state\":{\"type\":\"string\",\"description\":\"Filters pets by state\"},\"address.zipcode\":{\"type\":\"integer\",\"description\":\"Filters pets by zip code\"},\"vet.name\":{\"type\":\"string\",\"description\":\"Filters pets by veterinarian name\"},\"vet.address.city\":{\"type\":\"string\",\"description\":\"Filters pets by veterinarian city\"},\"vet.address.state\":{\"type\":\"string\",\"description\":\"Filters pets by veterinarian state\"},\"vet.address.zipcode\":{\"type\":\"integer\",\"description\":\"Filters pets by veterinarian zip code\"}},\"required\":[\"age\"]}",
          "bodies": [
            {
              "body": "{\"properties\":{}}",
              "example": ""
            }
          ]
        },
        "responses": [
          {
            "codes": [
              400
            ],
            "headers": "{\n  \"type\": \"object\",\n  \"properties\": {}\n}",
            "body": "{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/pet\"}}",
            "example": "",
            "description": "Returns the pets that were deleted"
          }
        ],
        "middlewareBefore": "",
        "middlewareAfter": "",
        "mock": {
          "enabled": null,
          "statusCode": null
        },
        "securedBy": {
          "none": true
        }
      }
    ],
    "schemas": [
      {
        "name": "address",
        "namespace": "address",
        "definition": "{\"properties\":{\"street\":{\"type\":\"string\",\"minLength\":1},\"city\":{\"type\":\"string\",\"minLength\":1},\"state\":{\"type\":\"string\",\"minLength\":2,\"maxLength\":2,\"pattern\":\"^[A-Z]+$\"},\"zipcode\":{\"type\":\"integer\",\"minimum\":10000,\"maximum\":99999}}}",
        "example": {}
      },
      {
        "name": "veterinarian",
        "namespace": "veterinarian",
        "definition": "{\"required\":[\"name\"],\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1},\"address\":{\"$ref\":\"#/definitions/address\"}}}",
        "example": {}
      },
      {
        "name": "pet",
        "namespace": "pet",
        "definition": "{\"required\":[\"name\",\"type\"],\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":4,\"pattern\":\"^[a-zA-Z0-9- ]+$\"},\"age\":{\"type\":\"integer\"},\"dob\":{\"type\":\"string\",\"format\":\"date\"},\"type\":{\"type\":\"string\",\"enum\":[\"cat\",\"dog\",\"bird\"]},\"address\":{\"$ref\":\"#/definitions/address\"},\"vet\":{\"$ref\":\"#/definitions/veterinarian\"},\"tags\":{\"type\":\"array\",\"uniqueItems\":true,\"items\":{\"type\":\"string\",\"minLength\":1}}}}",
        "example": {}
      }
    ],
    "utilityFunctions": [
      {
        "name": "onlyProcessPath",
        "description": "If your API lives at a subpath, for example, localhost:3000/api, then this function is useful to only learn / log requests that match the given subpath.",
        "script": "function (ctx, request, subpath) {\n  // for example, onlyProcessPath(ctx, request, \"api\") will turn off logging/learning for any\n  // requests that don't have \"api\" in their path.\n  if (request.url.path.get().indexOf(subpath) == -1) {\n     ctx.log.set(false)\n     ctx.learn.set(false)\n  }\n}"
      }
    ]
  }
}
