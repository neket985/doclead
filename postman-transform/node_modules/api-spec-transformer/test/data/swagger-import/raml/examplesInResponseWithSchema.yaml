#%RAML 1.0
title: Simple API
version: 0.0.0
mediaType: application/json
/:
  displayName: ''
  get:
    displayName: GET_root
    responses:
      '200':
        body:
          application/json:
            type: Person
            example:
              application/json: {
                "firstName": "John"
              }
        description: History information for the given user
types:
  Person:
    displayName: Person
    properties:
      firstName:
        type: string
        required: false
      lastName:
        type: string
        required: false
      username:
        type: string
        pattern: '[a-z0-9]{8,64}'
        minLength: 8
        maxLength: 64
      dateOfBirth:
        type: date-only
        required: false
      lastTimeOnline:
        type: datetime
        format: rfc3339
        required: false
      avatarBase64PNG:
        type: string
        required: false
      shortProp:
        type: integer
        format: int32
        required: false
      longProp:
        type: integer
        format: int64
        required: false
      floatProp:
        type: number
        format: float
        required: false
      doubleProp:
        type: number
        format: double
        required: false
      stringProp:
        type: string
        required: false
      byteProp:
        type: string
        required: false
      binaryProp:
        type: string
        required: false
      boolProp:
        type: boolean
        required: false
      dateProp:
        type: date-only
        required: false
      dateTimeProp:
        type: datetime
        format: rfc3339
        required: false
      passwordProp:
        type: string
        required: false
      spokenLanguages:
        type: SpokenLanguages
        required: false
  SpokenLanguages:
    displayName: SpokenLanguages
    properties:
      //:
        type: string
  Persons:
    displayName: Persons
    properties:
      items:
        type: array
        minItems: 10
        maxItems: 100
        uniqueItems: true
        items:
          type: Person
        required: false
  ErrorMessage:
    displayName: ErrorMessage
    properties:
      longMessage:
        type: string
        required: false
      shortMessage:
        type: string
        required: false
  MultilingualErrorMessage:
    displayName: MultilingualErrorMessage
    properties:
      defaultLanguage:
        type: ErrorMessage
        required: false
      //:
        type: ErrorMessage
  Error:
    displayName: Error
    properties:
      code:
        type: string
        enum:
          - DBERR
          - NTERR
          - UNERR
      message:
        type: MultilingualErrorMessage
  CollectingItem:
    displayName: CollectingItem
    discriminator: itemType
    properties:
      itemType:
        type: string
        enum:
          - Vinyl
          - VHS
      imageId:
        type: string
        required: false
      maxPrice:
        type: number
        format: double
        minimum: 0
        maximum: 10000
        required: false
    example:
      itemType: Puma
      maxPrice: 1
  Vinyl:
    displayName: Vinyl
    properties:
      albumName:
        type: string
      artist:
        type: string
    example:
      itemType: Vinyl
      albumName: Help!
      artist: The Beatles
    type: CollectingItem
  VHS:
    displayName: VHS
    properties:
      movieTitle:
        type: string
      director:
        type: string
        required: false
    type: CollectingItem
  PagedPersonsV1:
    displayName: PagedPersonsV1
    properties:
      items:
        type: array
        items:
          type: Person
        required: false
      totalItems:
        type: integer
        required: false
      totalPages:
        type: integer
        required: false
      pageSize:
        type: integer
        required: false
      currentPage:
        type: integer
        required: false
  PagedPersonsV2:
    displayName: PagedPersonsV2
    properties:
      items:
        type: array
        items:
          type: Person
        required: false
      paging:
        type: Paging
        required: false
  Paging:
    displayName: Paging
    properties:
      totalItems:
        type: integer
        required: false
      totalPages:
        type: integer
        required: false
      pageSize:
        type: integer
        required: false
      currentPage:
        type: integer
        required: false
  PagedPersons:
    displayName: PagedPersons
    type:
      - Persons
      - Paging
  PagedCollectingItems:
    displayName: PagedCollectingItems
    properties:
      items:
        type: array
        minItems: 10
        maxItems: 100
        uniqueItems: true
        items:
          type: CollectingItem
        required: false
    type: Paging
traits:
  pageSize:
    queryParameters:
      pageSize:
        type: integer
        description: Number of persons returned
        maximum: 100
  pageNumber:
    queryParameters:
      pageNumber:
        type: integer
        description: Page number
  standard500ErrorResponse:
    responses:
      '200':
        description: An unexpected error occured.
  personDoesNotExistResponse:
    responses:
      '200':
        description: Person does not exist.