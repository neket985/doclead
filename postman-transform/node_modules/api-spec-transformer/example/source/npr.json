{
    "swagger": "2.0",
    "info": {
        "title": "NPR One API Reference",
        "description": "NPR One is a smart application that brings the best of NPR and Member Station programming, newscasts,\npodcasts, and stories together to create a new experience for listening. It provides an editor-curated and\nlocalized mobile listening experience based on the content the listener chooses, likes, shares, and enjoys.\nThe API provides all of the content and customization in a simple, structured way that is easy for application\ndevelopers to implement.",
        "termsOfService": "http://dev.npr.org/develop/terms-of-use",
        "contact": {
            "name": "NPR One Enterprise Team",
            "url": "http://dev.npr.org",
            "email": "NPROneEnterprise@npr.org"
        },
        "version": "Beryllium"
    },
    "host": "api.npr.org",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json",
        "application/vnd.collection.doc+json"
    ],
    "produces": [
        "application/json",
        "application/vnd.collection.doc+json"
    ],
    "paths": {
        "/authorization/v2/token": {
            "post": {
                "tags": [
                    "authorization"
                ],
                "summary": "Create a new OAuth2 access token",
                "description": "Please be aware that the required parameters are contingent on the `grant_type` that you select.\n\nFor the `authorization_code` grant type, you are **required** to pass in the `code` and `redirect_uri` parameters. `service`, `username` and `password` parameters will be ignored.\n\nFor the `client_credentials` grant type, you do not need to pass in any additional parameters beyond the basic requirements. `code`, `redirect_uri`, `service`, `username` and `password` parameters will be ignored.\n\nFor the `device_code` grant type, you are **required** to pass in the `code` parameter. `redirect_uri`, `service`, `username` and `password` parameters will be ignored.\n\nFor the `password` grant type, you are **required** to pass in the `username` and `password` parameters. If you are logging in via a social service, you should also pass in the `service` parameter. (In this case, the access token you receive from the social service will serve as both your username and password.) The `code` and `redirect_uri` parameters are ignored.\nThird-party developers do not have access to this grant type.\n\nThe `temporary_user` grant type is a custom grant type created by NPR to suit our needs for functionality such as our &quot;try-before-you-buy&quot; experience. If you are a third-party developer, you will not have access to this grant type unless we have explicitly given you permission within our system.\nFor this grant type, you do not need to pass in any additional parameters beyond the basic requirements. `code`, `redirect_uri`, `service`, `username` and `password` parameters will be ignored.\n\nIf you are unsure of which grant type to select, assume that `authorization_code` is the one you want.",
                "operationId": "createToken",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "grant_type",
                        "in": "formData",
                        "description": "The type of grant the client is requesting",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "authorization_code",
                            "client_credentials",
                            "device_code",
                            "password",
                            "temporary_user"
                        ]
                    },
                    {
                        "name": "client_id",
                        "in": "formData",
                        "description": "The client's ID, required for all grant types.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_secret",
                        "in": "formData",
                        "description": "The client's secret, required for all grant types.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "Required for `authorization_code` and `device_code` grant types. The authorization code from a successful call to `/authorization/v2/authorize`, or a device code from a successful call to `/authorization/v2/device`.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "formData",
                        "description": "Required for `authorization_code` grant type. The requested redirect_uri.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "Required for `password` grant type. The email address of an NPR user.",
                        "required": false,
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Required for `password` grant type. The password that matches the user specified with the username parameter.",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "service",
                        "in": "formData",
                        "description": "If logging in via a social service, this parameter should be set. Only used for the `password` grant type.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "facebook",
                            "google",
                            "microsoft",
                            "janrain"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A new token was successfully created",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenData"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/Simple400"
                    },
                    "401": {
                        "description": "The client credentials were invalid (any grant type), the user credentials were invalid (`password` grant type), the user has not yet logged in or has purposely denied the request (`device_code` grant type), or the authorization server denied the request.",
                        "schema": {
                            "$ref": "#/definitions/SimpleError"
                        }
                    },
                    "500": {
                        "$ref": "#/responses/Simple500"
                    },
                    "503": {
                        "$ref": "#/responses/Simple503"
                    }
                }
            }
        },
        "/authorization/v2/authorize": {
            "get": {
                "tags": [
                    "authorization"
                ],
                "summary": "Show a web-based login/signup form to a user",
                "description": "If the parameters passed to this endpoint are correct, it will redirect to `npr.org/oauth2/login` for the user to complete the sign-in.\n\nCurrently acceptable values for `scope` are any combination of the following:\n- `identity.readonly` - for read-only access to the Identity Service\n- `identity.write` - for write access to the Identity Service\n- `listening.readonly` - for read-only access to the Listening Service\n- `listening.write` - for write access to the Listening Service\n- `localactivation` - for all access to the Local Activation Service\nIt is generally suggested that you assume that you will need all of the current scopes in order to successfully implement an NPR One application.\n\nIf the parameters passed in are NOT correct and the client passed in a valid `redirect_uri` parameter, the request will be redirected to `{{YOUR_REDIRECT_URI}}?error={{ERROR_TYPE}}&message={{ERROR_DESCRIPTION}}`.\nIf the parameters passed are NOT correct and the client did not pass in a valid `redirect_uri` parameter, this endpoint will return the errors encoded as JSON objects (along with the corresponding HTTP status code -- usually 400).\nThe latter is intended for development and debugging purposes -- in a real-world situation, errors returned as JSON objects are irretrievable by the client application, and thus passing in a valid `redirect_uri` is critical even for the purpose of capturing errors.\n\nIf the user successfully logs in and authorizes the application, the request will be redirected to `{{YOUR_REDIRECT_URI}}?code={{AUTHORIZATION_CODE}}&state={{CSRF_TOKEN}}`\n\nIf the user DENIES the application, they will be redirected to `{{YOUR_REDIRECT_URI}}?error=denied&message=The%20user%20has%20denied%20the%20login%20and%20access%20request&state={{CSRF_TOKEN}}`.\nThis means that if your application flow requires a user to log in in order to proceed, it is up to you to give them the proper messaging explaining that the sign-in must be authorized in order to continue.\n\nFinally, please do not confuse an authorization code with an access token. Once your app has completed this flow, you will still need to call `POST /authorization/v2/token` in order to swap the code for a valid access token.",
                "operationId": "getAuthorizationPage",
                "produces": [
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "The client's ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "description": "The client's URL to redirect to if the authentication is approved",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "description": "The type of response; currently, only `code` is supported",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "code"
                        ]
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "A space-separated list of scope(s) requested by the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "A CSRF token generated by the client, to be roundtripped through the request for added security",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "The correct parameters were passed in and we are redirecting to the authentication page; OR, a valid `redirect_uri` was supplied but there was another error, and the error type and message are embedded in the querystring.",
                        "headers": {
                            "Location": {
                                "description": "The sign-in page to redirect to; most clients will process this redirect automatically.",
                                "type": "string",
                                "format": "url"
                            }
                        }
                    },
                    "400": {
                        "description": "A bad request; generally, one or more parameters passed in were incorrect or missing. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
                        "schema": {
                            "$ref": "#/definitions/SimpleError"
                        }
                    },
                    "401": {
                        "description": "The client credentials were invalid (i.e., the `redirect_uri` does not match what we have stored for this client) or the authorization server denied the request. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
                        "schema": {
                            "$ref": "#/definitions/SimpleError"
                        }
                    },
                    "500": {
                        "description": "There was an unspecified server error. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
                        "schema": {
                            "$ref": "#/definitions/SimpleError"
                        }
                    },
                    "503": {
                        "description": "The system is undergoing maintenance and we are unable to fulfill this request. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
                        "schema": {
                            "$ref": "#/definitions/SimpleError"
                        }
                    }
                }
            }
        },
        "/authorization/v2/device": {
            "post": {
                "tags": [
                    "authorization"
                ],
                "summary": "Initiate an OAuth2 login flow for limited input devices",
                "description": "This flow should only be used by clients who cannot show a native webview or do not have advanced input controls. It is an alternative to `GET /authorization/v2/authorize`.\n\nThird-party clients will need to use one or the other of these two endpoints, but they will generally not use both.",
                "operationId": "generateDeviceCode",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "formData",
                        "description": "The client's ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client_secret",
                        "in": "formData",
                        "description": "The client's secret key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "formData",
                        "description": "A space-separated list of scope(s) requested by the application. Required for all untrusted clients; will be ignored for trusted clients.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "We have generated a unique device code and user code. These will only be valid for the amount of time specified in the `expires_in` field; if the user does not complete the login process in that amount of time, the client will need to request a new set of codes.",
                        "schema": {
                            "$ref": "#/definitions/DeviceCodeData"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/Simple400"
                    },
                    "401": {
                        "$ref": "#/responses/Simple401"
                    },
                    "500": {
                        "$ref": "#/responses/Simple500"
                    },
                    "503": {
                        "$ref": "#/responses/Simple503"
                    }
                }
            }
        },
        "/authorization/v2/token/revoke": {
            "post": {
                "tags": [
                    "authorization"
                ],
                "summary": "Revokes an existing OAuth2 access token",
                "description": "Our implementation follows the proposed IETF specification [RFC-7009](https://tools.ietf.org/html/rfc7009).\n\nIf your client application offers the ability to for a logged-in user to log out, and you have access to a long-lived\n`client_credentials` token (i.e. you have generated one that you are storing securely for the lifetime of the entire app\ninstall), we suggest (but do not require) that you call this endpoint and revoke the access token belonging to the\nlogged-in user as part of your logout process. If you do not already have a long-lived `client_credentials` token,\nplease don't generate one just for the purposes of calling this endpoint.\n\nIf you are building a prototype application, we also recommend that you use this endpoint to clean up access tokens\nthat you generate during the testing of your app and do not intend to reuse.",
                "operationId": "revokeToken",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "A `client_credentials` access token from the same client application as the token being revoked. Should start with `Bearer`, followed by a space, followed by the token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "The token that the client wants to get revoked.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token_type_hint",
                        "in": "formData",
                        "description": "A hint about the type of the token submitted for revocation. Note that at present, our system does not issue refresh tokens, so unless otherwise directed, the value (if passed in) should always be `access_token`.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "access_token",
                            "refresh_token"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The old token was successfully revoked",
                        "schema": {
                            "description": "An empty JSON object",
                            "type": "object"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/Simple400"
                    },
                    "401": {
                        "$ref": "#/responses/Simple401"
                    },
                    "403": {
                        "description": "The client associated with the access token in the header does not own the access token that this request is attempting to revoke.",
                        "schema": {
                            "$ref": "#/definitions/SimpleError"
                        }
                    },
                    "500": {
                        "$ref": "#/responses/Simple500"
                    },
                    "503": {
                        "$ref": "#/responses/Simple503"
                    }
                }
            }
        },
        "/identity/v2/user": {
            "get": {
                "tags": [
                    "identity"
                ],
                "summary": "Get the latest state information about the logged-in user",
                "description": "After a successful login, the client should send a `GET` call approximately once an hour to refresh the user data.",
                "operationId": "getUser",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/IdentitySuccess"
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "identity.readonly"
                        ]
                    }
                ]
            }
        },
        "/identity/v2/stations": {
            "put": {
                "tags": [
                    "identity"
                ],
                "summary": "Update the logged-in user's favorite station(s)",
                "description": "Right now, only the primary station can be changed. Previously selected stations will not be deleted, but the new station will be moved to first in the array.",
                "operationId": "updateStations",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON-serialized array of station IDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/IdentitySuccess"
                    },
                    "400": {
                        "$ref": "#/responses/400WithDocument"
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "identity.write"
                        ]
                    }
                ]
            }
        },
        "/identity/v2/user/inherit": {
            "post": {
                "tags": [
                    "identity"
                ],
                "summary": "Copy listening data from a temporary user account to the logged-in user's account",
                "description": "This can and should only be used by clients who have access to the `temporary_user` grant type.\nThird-party developers do not have access to this grant type by default, and will not need this endpoint.",
                "operationId": "inheritFromTempUser",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "name": "temp_user",
                        "in": "query",
                        "description": "The temporary user's ID before the user registered or logged in",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "202": {
                        "$ref": "#/responses/IdentitySuccess"
                    },
                    "400": {
                        "$ref": "#/responses/400WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "identity.write"
                        ]
                    }
                ]
            }
        },
        "/identity/v2/following": {
            "post": {
                "tags": [
                    "identity"
                ],
                "summary": "Update the following status of the logged-in user for a particular aggregation",
                "description": "After a successful call, this returns a User document with an updated list of affiliations.",
                "operationId": "postFollowing",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON-serialized object which contains data about a user affiliation such as the aggregation ID, affiliation rating, aggregation URL, days since last listen, and following status.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Affiliation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/IdentitySuccess"
                    },
                    "400": {
                        "$ref": "#/responses/400WithDocument"
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "identity.write"
                        ]
                    }
                ]
            }
        },
        "/listening/v2/channels": {
            "get": {
                "tags": [
                    "listening"
                ],
                "summary": "Get the list of available channels",
                "description": "These channels allow the user to specify a focus for the content returned in the recommendations endpoint.",
                "operationId": "getChannels",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of channels",
                        "schema": {
                            "$ref": "#/definitions/ChannelsDocument"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "listening.readonly"
                        ]
                    }
                ]
            }
        },
        "/listening/v2/ratings": {
            "post": {
                "tags": [
                    "listening"
                ],
                "summary": "Collect new ratings for media previously recommended to the logged-in user",
                "description": "This endpoint is the main mechanism for providing feedback from the user to NPR about the recommendations that are obtained from `GET /listening/v2/recommendations`.\n\nA fully-populated link to this endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the `links['recommendations']` object. The query parameters in this link should not be modified.\nBe sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.\n\nThis endpoint can return a blank JSON.doc or AudioItemDocument depending on the `recommend=true|false` parameter. The `recommend=true` flag allows this endpoint to both receive ratings and send back recommendations in the same call.",
                "operationId": "postRating",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "$ref": "#/parameters/X-Advertising-ID"
                    },
                    {
                        "$ref": "#/parameters/channel"
                    },
                    {
                        "name": "recommend",
                        "in": "query",
                        "description": "If set to `true`, this call will return a new recommendation object; otherwise it will return a blank document",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of RatingData objects which contains data about ratings such as the id of the content, the rating value, elapsed time and more.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RatingData"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If the `recommend` param was set to `true`, this returns a list of audio items; otherwise, a blank document is returned.",
                        "schema": {
                            "$ref": "#/definitions/AudioItemListDocument"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/400WithDocument"
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "listening.write"
                        ]
                    }
                ]
            }
        },
        "/listening/v2/recommendations": {
            "get": {
                "tags": [
                    "listening"
                ],
                "summary": "Get a list of media for the logged-in user from NPR's recommendation engine",
                "description": "This endpoint returns a list of audio recommendations. It is designed to be used for an initial list of recommendations, and then `GET /listening/v2/ratings?recommend=true` should be used for subsequent requests for recommendations.\n\nA fully-populated link to the ratings endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the `links['recommendations']` object. The query parameters in this link should not be modified.\nBe sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.",
                "operationId": "getRecommendations",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "$ref": "#/parameters/X-Advertising-ID"
                    },
                    {
                        "$ref": "#/parameters/channel"
                    },
                    {
                        "name": "sharedMediaId",
                        "in": "query",
                        "description": "This media was shared directly with the user; if provided, the service will add this recommendation to the top of the list",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "notifiedMediaId",
                        "in": "query",
                        "description": "The user received a push notification about this media; if provided, the service will add this recommendation to the top of the list",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/ListeningSuccess"
                    },
                    "400": {
                        "$ref": "#/responses/400WithDocument"
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "listening.readonly"
                        ]
                    }
                ]
            }
        },
        "/listening/v2/history": {
            "get": {
                "tags": [
                    "listening"
                ],
                "summary": "Get recent ratings the logged-in user has submitted",
                "description": "This endpoint provides the list of recently-rated audio recommendations that the logged-in user has consumed. Some rated recommendations are filtered, such as sponsorship and donation.",
                "operationId": "getHistory",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/ListeningSuccess"
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "listening.readonly"
                        ]
                    }
                ]
            }
        },
        "/listening/v2/aggregation/{aggId}/recommendations": {
            "get": {
                "tags": [
                    "listening"
                ],
                "summary": "Get a set of recommendations for an aggregation",
                "description": "This endpoint provides a list of recent audio items associated with the aggregation along with metadata about the aggregation.",
                "operationId": "getAggRecommendations",
                "parameters": [
                    {
                        "name": "aggId",
                        "in": "path",
                        "description": "ID of an aggregation such as a program or podcast",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "name": "startNum",
                        "in": "query",
                        "description": "The result to start with. Allows paging through the episodes of a podcast or program, with the default, `startNum=0`, being the most recent episode",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audio items from the specified aggregation",
                        "schema": {
                            "$ref": "#/definitions/AggregationAudioItemListDocument"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "listening.readonly"
                        ]
                    }
                ]
            }
        },
        "/listening/v2/search/recommendations": {
            "get": {
                "tags": [
                    "listening"
                ],
                "summary": "Get a list of recent audio and aggregation items associated with search terms",
                "description": "In the schema shown below, SearchItemDocument is not an actual type of returned object; the object returned by a search will be either an AggregationAudioItemListDocument or an AudioItemDocument.",
                "operationId": "getSearchRecommendations",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "name": "searchTerms",
                        "in": "query",
                        "description": "Search terms to search on; can include URL-encoded punctuation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of audio and aggregation items matching the search query",
                        "schema": {
                            "$ref": "#/definitions/SearchListDocument"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    },
                    "503": {
                        "$ref": "#/responses/503WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "listening.readonly"
                        ]
                    }
                ]
            }
        },
        "/localactivation/v2/donate_email": {
            "get": {
                "tags": [
                    "localactivation"
                ],
                "summary": "Send a donation email to the logged-in user (only on request)",
                "description": "This will send a station-specific donation email to the logged-in user.",
                "operationId": "sendDonationEmail",
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "On success only a blank document",
                        "schema": {
                            "$ref": "#/definitions/CollectionDocument"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-RateLimit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/401WithDocument"
                    },
                    "429": {
                        "$ref": "#/responses/429WithDocument"
                    },
                    "500": {
                        "$ref": "#/responses/500WithDocument"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "localactivation"
                        ]
                    }
                ]
            }
        },
        "/sponsorship/v2/ads": {
            "get": {
                "tags": [
                    "sponsorship"
                ],
                "summary": "Request DAAST sponsorship units",
                "description": "**Not** for use by NPR One clients (for whom sponsorship is already integrated into the Listening Service), this endpoint is designed to be used by our other client applications to request sponsorship on behalf of a user. Sponsorship units are returned in the form of DAAST XML. It is worth noting that this endpoint attempts to always return XML, even in the case of exceptions.\n\nThe default behavior of this endpoint is asynchronous; on an initial request, a call to our external sponsorship provider is placed on a queue, which is typically processed within 3 minutes. Once the sponsorship call is received and processed, the returned sponsorship units are placed in a cache on our server for the current user. Subsequent calls to this endpoint will return DAAST sponsorship units from this cache until tracking information is submitted, which removes the ad from the cache and will automatically request additional ads asynchronously if there are fewer than a certain number remaining in the cache.\n\nFor development purposes, it's worth noting that there is currently no way to clear a user's cache without submitting some form of tracking.",
                "operationId": "getAds",
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "$ref": "#/parameters/X-Advertising-ID"
                    },
                    {
                        "name": "forceResult",
                        "in": "query",
                        "description": "Whether to force a synchronous call to our external sponsorship provider; the default behavior is asynchronous.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "adCount",
                        "in": "query",
                        "description": "How many sponsorship units to request in one call; if left unspecified, the default behavior is to return only 1.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "maximum": 5,
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully; a DAAST XML document is returned. Note that this response will only be returned if either `force=true` was passed in the querystring, or a call to get sponsorship was previously made, and ads now exist in the cache for this user; otherwise, the 202 response is returned.",
                        "schema": {
                            "$ref": "#/definitions/DAASTXml"
                        }
                    },
                    "202": {
                        "description": "Request accepted. Check back later for actual ads."
                    },
                    "400": {
                        "description": "A bad request; generally, one or more parameters passed in were incorrect or missing",
                        "schema": {
                            "$ref": "#/definitions/ErrorXmlDocument"
                        }
                    },
                    "500": {
                        "description": "A server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorXmlDocument"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sponsorship"
                ],
                "summary": "Record tracking data for DAAST sponsorship units",
                "description": "**Not** for use by NPR One clients (for whom sponsorship is already integrated into the Listening Service), this endpoint is designed to be used by our other client applications to submit tracking information for sponsorship units obtained from the `GET /sponsorship/v2/ads` endpoint.\n\nThe tracking information should be submitted in the body of the request in the form of a JSON object following the Collection.Doc+JSON specification.",
                "operationId": "receiveAdTracking",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    },
                    {
                        "$ref": "#/parameters/X-Advertising-ID"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A JSON object representing sponsorship tracking data to submit to our external provider.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserAdDocument"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully, but there is nothing that we need to return to the caller."
                    },
                    "400": {
                        "description": "A bad request; generally, one or more parameters passed in were incorrect or missing",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "A server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SimpleError": {
            "description": "A simple representation of an error result from an API call, rarely used; in most cases we still return a Collection.doc+JSON document for errors",
            "required": [
                "message",
                "type"
            ],
            "properties": {
                "message": {
                    "description": "A message describing the error that occurred",
                    "type": "string"
                },
                "type": {
                    "description": "A short string representing the type of error that occurred",
                    "type": "string",
                    "default": "error"
                }
            }
        },
        "AccessTokenData": {
            "required": [
                "access_token",
                "token_type",
                "expires_in"
            ],
            "properties": {
                "access_token": {
                    "description": "The access token to use for all future calls",
                    "type": "string"
                },
                "token_type": {
                    "description": "Identifies the type of token returned. At this time, this field always has the value `Bearer`.",
                    "type": "string",
                    "enum": [
                        "Bearer",
                        "MAC"
                    ]
                },
                "expires_in": {
                    "description": "The remaining lifetime of the access token",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeviceCodeData": {
            "required": [
                "device_code",
                "user_code",
                "verification_uri",
                "expires_in",
                "interval"
            ],
            "properties": {
                "device_code": {
                    "description": "40-character code for the device to input into the /token endpoint, not for display to the user",
                    "type": "string"
                },
                "user_code": {
                    "description": "6-character alphanumeric code for the user to enter at http://npr.org/device, to be displayed by the client application",
                    "type": "string"
                },
                "verification_uri": {
                    "description": "The URL where the user should input their code, to be displayed by the client application",
                    "type": "string",
                    "default": "http://npr.org/device"
                },
                "expires_in": {
                    "description": "The number of seconds for which this set of codes will be valid, after which they will be purged",
                    "type": "integer",
                    "format": "int32",
                    "default": 1800
                },
                "interval": {
                    "description": "The number of seconds the client application should maintain between requests to the /token endpoint",
                    "type": "integer",
                    "format": "int32",
                    "default": 5
                }
            }
        },
        "Error": {
            "description": "A serialized version of any error encountered when processing this request",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "description": "The error code",
                    "type": "integer",
                    "format": "int32"
                },
                "text": {
                    "description": "The error description",
                    "type": "string"
                },
                "debug": {
                    "description": "Additional debug information if debug mode is turned on",
                    "type": "string"
                }
            }
        },
        "CollectionDocument": {
            "description": "Base Collection.Doc+JSON output",
            "required": [
                "version",
                "href",
                "attributes",
                "items",
                "links",
                "errors"
            ],
            "properties": {
                "version": {
                    "description": "The version of the Collection.Doc+JSON spec being used",
                    "type": "string",
                    "default": "1.0"
                },
                "href": {
                    "description": "A URL representation of the resource; should generally be ignored by clients unless noted otherwise",
                    "type": "string"
                },
                "attributes": {
                    "type": "object"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "null"
                    }
                },
                "links": {
                    "type": "object"
                },
                "errors": {
                    "description": "A list of encountered errors, ignored on POST, PUT",
                    "type": "array",
                    "items": {
                        "type": "null"
                    }
                }
            }
        },
        "ErrorDocument": {
            "description": "A Collection.doc+JSON representation of an error result from an API call",
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "Ignore; will be empty for errors",
                            "type": "object"
                        },
                        "items": {
                            "description": "Ignore; will be empty for errors",
                            "type": "array",
                            "items": {
                                "type": "null"
                            }
                        },
                        "links": {
                            "description": "Ignore; will be empty for errors",
                            "type": "object"
                        },
                        "errors": {
                            "description": "A list of encountered errors, ignored on POST, PUT",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    }
                }
            ]
        },
        "UserDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "items": {
                            "description": "Not used, ignored on a PUT",
                            "type": "array",
                            "items": {
                                "type": "null"
                            }
                        },
                        "links": {
                            "description": "A list of links, not used by the Identity Service; ignored on a PUT",
                            "type": "object"
                        },
                        "attributes": {
                            "description": "Object; see description of a user object below",
                            "$ref": "#/definitions/UserData"
                        }
                    }
                }
            ]
        },
        "UserData": {
            "description": "Object; see description of a user object below",
            "required": [
                "id",
                "cohort",
                "organizations"
            ],
            "properties": {
                "id": {
                    "description": "Some unique identifier for the user",
                    "type": "string"
                },
                "firstName": {
                    "description": "The user's first name",
                    "type": "string"
                },
                "lastName": {
                    "description": "The user's last name",
                    "type": "string"
                },
                "email": {
                    "description": "The user's email address",
                    "type": "string"
                },
                "cohort": {
                    "description": "Experimental groupings for User Experience A/B Testing",
                    "$ref": "#/definitions/Cohort"
                },
                "organizations": {
                    "description": "User's chosen NPR Member Station(s)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Organization"
                    }
                },
                "affiliations": {
                    "description": "Program(s) that the user has positively interacted with",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Affiliation"
                    }
                }
            }
        },
        "Cohort": {
            "description": "An experimental grouping for User Experience A/B Testing",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "A short ID for this cohort; ignored on a PUT",
                    "type": "string"
                },
                "name": {
                    "description": "A text string identifying the cohort, useful for metrics; ignored on a PUT",
                    "type": "string"
                },
                "directory": {
                    "description": "For internal use only; represents the current configuration file being used by the Listening Service",
                    "type": "string"
                }
            }
        },
        "Organization": {
            "description": "A station that a user has an affiliation with",
            "required": [
                "id",
                "displayName",
                "call",
                "city"
            ],
            "properties": {
                "id": {
                    "description": "Some unique identifier for the organization for the user",
                    "type": "string"
                },
                "displayName": {
                    "description": "A short displayable text field for the end user, strictly text; ignored on PUT",
                    "type": "string"
                },
                "call": {
                    "description": "Station call letters",
                    "type": "string"
                },
                "city": {
                    "description": "A short description of the station's main market city",
                    "type": "string"
                },
                "logo": {
                    "description": "Station logo image url",
                    "type": "string"
                }
            }
        },
        "RatingData": {
            "required": [
                "mediaId",
                "origin",
                "rating",
                "elapsed",
                "duration",
                "timestamp",
                "channel",
                "cohort"
            ],
            "properties": {
                "mediaId": {
                    "description": "The media id as given by the media object",
                    "type": "string",
                    "pattern": "^\\d{3,}:[\\w-]{5,}$"
                },
                "origin": {
                    "description": "How the recommendation was generated",
                    "type": "string",
                    "pattern": "^[A-Z0-9_]{2,10}$"
                },
                "rating": {
                    "description": "String representing the rating",
                    "type": "string",
                    "pattern": "^[A-Z0-9_]{2,10}$"
                },
                "elapsed": {
                    "description": "Number of seconds since the start of playback for this media item, as an integer",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 9999,
                    "minimum": 0
                },
                "duration": {
                    "description": "Number of seconds this audio piece is expected to last",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 9999,
                    "minimum": 0
                },
                "timestamp": {
                    "description": "ISO-8601 formatted date/time; typically replaced by the client with the actual rating time",
                    "type": "string",
                    "format": "date-time"
                },
                "affiliations": {
                    "description": "An array of IDs & other data about collections or podcasts the user has ratings for; produced by the server and should be sent back as received; used for tracking program and podcast suggestions",
                    "type": "array",
                    "items": {
                        "type": "null"
                    }
                },
                "channel": {
                    "description": "The channel this media item was pulled from",
                    "type": "string",
                    "default": "npr"
                },
                "cohort": {
                    "description": "The primary cohort of the current logged-in user",
                    "type": "string"
                }
            }
        },
        "Affiliation": {
            "description": "A program (aggregation) that a given user has shown an affiliation with",
            "required": [
                "id",
                "href",
                "following"
            ],
            "properties": {
                "id": {
                    "description": "A unique identifier for the aggregation (program)",
                    "type": "integer",
                    "format": "int64"
                },
                "rating": {
                    "description": "The user's average rating for this affiliation on a scale of 0-1. Absent if user never listened to the aggregation.",
                    "type": "number",
                    "format": "float"
                },
                "href": {
                    "description": "A link to more details about the program from the NPR Story API",
                    "type": "string"
                },
                "daysSinceLastListen": {
                    "description": "The number of days since a user last listened to a story from this aggregation. Absent if user never listened to the aggregation.",
                    "type": "integer",
                    "format": "int32"
                },
                "following": {
                    "description": "Whether or not the user is following the aggregation. When changing affiliation status, the client is expected to toggle this value and then send the entire object back.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "AggregationAudioItemListDocument": {
            "description": "An array of audio recommendations with additional metadata about the aggregation they are associated with",
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "The metadata which describes the aggregation",
                            "$ref": "#/definitions/AggregationData"
                        },
                        "items": {
                            "description": "An array of Audio Items (recommendations)",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AudioItemDocument"
                            }
                        },
                        "links": {
                            "description": "An array of links for the aggregation. Look here for images associated with the aggregation or for a more link to get more episodes.",
                            "$ref": "#/definitions/AggregationLinks"
                        }
                    }
                }
            ]
        },
        "AggregationData": {
            "required": [
                "type",
                "affiliation",
                "title"
            ],
            "properties": {
                "type": {
                    "description": "The type of list returned; will always be `aggregation`; useful for parsing search results",
                    "type": "string",
                    "default": "aggregation",
                    "enum": [
                        "aggregation"
                    ]
                },
                "affiliation": {
                    "description": "A unique identifier for the aggregation",
                    "type": "string"
                },
                "affiliationMeta": {
                    "description": "Metadata about the logged-in user's relationship to this aggregation",
                    "$ref": "#/definitions/Affiliation"
                },
                "title": {
                    "description": "The title of this aggregation",
                    "type": "string"
                },
                "description": {
                    "description": "A short description or teaser",
                    "type": "string"
                },
                "station": {
                    "description": "The producer of this aggregation",
                    "type": "string",
                    "default": "NPR"
                }
            }
        },
        "AggregationLinks": {
            "properties": {
                "web": {
                    "description": "One or more links to a web page for the item",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                },
                "more": {
                    "description": "One or more links to more episodes for the aggregation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                },
                "image": {
                    "description": "One or more links to an image, along with metadata for display",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageLink"
                    }
                }
            }
        },
        "AudioItemDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "The metadata which comprises the recommendation",
                            "$ref": "#/definitions/AudioItemData"
                        },
                        "items": {
                            "description": "Not used",
                            "type": "array",
                            "items": {
                                "type": "null"
                            }
                        },
                        "links": {
                            "description": "A list of links. Look here for audio files.",
                            "$ref": "#/definitions/AudioItemLinks"
                        }
                    }
                }
            ]
        },
        "AudioItemData": {
            "required": [
                "type",
                "uid",
                "title",
                "skippable",
                "rationale",
                "rating"
            ],
            "properties": {
                "type": {
                    "description": "Help determine how content is displayed; for more information, see <a href='http://dev.npr.org/design/general-specifications/playing-audio/'>our design guidelines</a>",
                    "type": "string",
                    "default": "audio",
                    "enum": [
                        "audio",
                        "sponsorship",
                        "stationId",
                        "intro",
                        "donate",
                        "featureCardInformational",
                        "featureCardNotification",
                        "featureCardPromotion",
                        "featureCardExternalLink",
                        "featureCardAsyncRequest"
                    ]
                },
                "uid": {
                    "description": "The media ID (for use in ratings objects)",
                    "type": "string",
                    "pattern": "^\\d{3,}:[\\w-]{5,}$"
                },
                "title": {
                    "description": "The title of this media",
                    "type": "string"
                },
                "button": {
                    "description": "The text contents of an action button displayed on the client",
                    "type": "string"
                },
                "skippable": {
                    "description": "Whether the client should allow this content to be skipped",
                    "type": "boolean",
                    "default": true
                },
                "rationale": {
                    "description": "A short summary of why this content was recommended",
                    "type": "string"
                },
                "slug": {
                    "description": "A tag or category for this media",
                    "type": "string"
                },
                "provider": {
                    "description": "The name of the organization providing this media",
                    "type": "string",
                    "default": "NPR"
                },
                "program": {
                    "description": "The program associated with this media",
                    "type": "string"
                },
                "duration": {
                    "description": "The length of the audio content in seconds",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 9999,
                    "minimum": 0
                },
                "date": {
                    "description": "The publication date in ISO-8691 format",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "A short description or teaser",
                    "type": "string"
                },
                "artist": {
                    "description": "The artist associated with the content",
                    "type": "string"
                },
                "album": {
                    "description": "Album information associated with the media",
                    "type": "string"
                },
                "label": {
                    "description": "The record label associated with the media",
                    "type": "string"
                },
                "rating": {
                    "description": "An object which contains all data that should be sent back to NPR when sending a rating",
                    "$ref": "#/definitions/RatingData"
                }
            }
        },
        "AudioItemListDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "Not used",
                            "type": "object"
                        },
                        "items": {
                            "description": "An array of Audio Items (recommendations)",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AudioItemDocument"
                            }
                        },
                        "links": {
                            "description": "Not used",
                            "type": "object"
                        }
                    }
                }
            ]
        },
        "ChannelDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "The channel data",
                            "$ref": "#/definitions/ChannelData"
                        },
                        "items": {
                            "description": "Not used",
                            "type": "array",
                            "items": {
                                "type": "null"
                            }
                        },
                        "links": {
                            "description": "Not used",
                            "type": "object"
                        }
                    }
                }
            ]
        },
        "ChannelData": {
            "required": [
                "id",
                "fullName",
                "description"
            ],
            "properties": {
                "id": {
                    "description": "The actual value that should be sent",
                    "type": "string"
                },
                "fullName": {
                    "description": "A short description of what this channel focuses on",
                    "type": "string"
                },
                "description": {
                    "description": "A longer description of what this channel focuses on",
                    "type": "string"
                }
            }
        },
        "ChannelsDocument": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "The default channel data",
                            "$ref": "#/definitions/ChannelsData"
                        },
                        "items": {
                            "description": "The list of individual channels",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChannelDocument"
                            }
                        },
                        "links": {
                            "description": "Not used",
                            "type": "object"
                        }
                    }
                }
            ]
        },
        "ChannelsData": {
            "properties": {
                "defaultChannel": {
                    "description": "The default channel NPR recommends",
                    "type": "string",
                    "default": "npr"
                }
            }
        },
        "AbstractLink": {
            "required": [
                "href"
            ],
            "properties": {
                "href": {
                    "description": "The link to be followed",
                    "type": "string"
                }
            }
        },
        "AudioLink": {
            "description": "A link to audio files for the item",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractLink"
                },
                {
                    "required": [
                        "content-type"
                    ],
                    "properties": {
                        "content-type": {
                            "description": "The MIME type of the response of this link; note that the enumerated list of possible values is not exhaustive and other MIME types could occur. The list should be treated as examples, rather than absolutes.",
                            "type": "string",
                            "default": "audio/aac",
                            "enum": [
                                "audio/mp3",
                                "audio/aac",
                                "audio/3gp",
                                "application/vnd.apple.mpegurl",
                                "audio/x-ms-wax"
                            ]
                        }
                    }
                }
            ]
        },
        "ImageLink": {
            "description": "An image, along with metadata for display",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractLink"
                },
                {
                    "required": [
                        "content-type"
                    ],
                    "properties": {
                        "content-type": {
                            "description": "The MIME type of the response of this link; note that the enumerated list of possible values is not exhaustive and other MIME types could occur. The list should be treated as examples, rather than absolutes.",
                            "type": "string",
                            "default": "image/jpeg",
                            "enum": [
                                "image/jpeg",
                                "image/png",
                                "image/gif"
                            ]
                        },
                        "image": {
                            "description": "A unique identifier for the image",
                            "type": "string"
                        },
                        "rel": {
                            "description": "The crop type or intended display style/size; note that the enumerated list of possible values is not exhaustive and other values could occur. The list should be treated as examples, rather than absolutes.",
                            "type": "string",
                            "default": "logo_square",
                            "enum": [
                                "logo_square",
                                "icon",
                                "wide",
                                "standard",
                                "square",
                                "enlargement",
                                "custom"
                            ]
                        },
                        "producer": {
                            "description": "The producer of the image; should be used for properly attributing the image when it exists",
                            "type": "string"
                        },
                        "provider": {
                            "description": "The provider of the image; should be used for properly attributing the image when it exists",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "OtherLink": {
            "description": "An individual link from a list of links",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractLink"
                },
                {
                    "required": [
                        "content-type"
                    ],
                    "properties": {
                        "content-type": {
                            "description": "The MIME type of the response of this link; note that the enumerated list of possible values is not exhaustive and other MIME types could occur. The list should be treated as examples, rather than absolutes.",
                            "type": "string",
                            "default": "application/json",
                            "enum": [
                                "application/json",
                                "application/xml",
                                "text/html"
                            ]
                        }
                    }
                }
            ]
        },
        "AudioItemLinks": {
            "properties": {
                "audio": {
                    "description": "One or more links to audio files for the item",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AudioLink"
                    }
                },
                "image": {
                    "description": "One or more links to an image, along with metadata for display",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageLink"
                    }
                },
                "web": {
                    "description": "One or more links to a web page for the item",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                },
                "onramps": {
                    "description": "One or more shareable links for the item",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                },
                "up": {
                    "description": "One or more links to more details about the program or podcast with which this item is associated",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                },
                "recommendations": {
                    "description": "This is the URL that should be POSTed with the ratings JSON when this audio starts to play",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                },
                "action": {
                    "description": "One or more links to be trigged by user actions, usually when a button is clicked",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OtherLink"
                    }
                }
            }
        },
        "SearchListDocument": {
            "description": "An array of aggregation or audio recommendations",
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "The metadata for the search itself",
                            "$ref": "#/definitions/SearchMetaData"
                        },
                        "items": {
                            "description": "A list of aggregation or audio items (recommendations)",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SearchItemDocument"
                            }
                        },
                        "links": {
                            "description": "Not used",
                            "type": "object"
                        }
                    }
                }
            ]
        },
        "SearchMetaData": {
            "required": [
                "query"
            ],
            "properties": {
                "query": {
                    "description": "The search terms used in the original request",
                    "type": "string"
                }
            }
        },
        "SearchItemDocument": {
            "description": "A search result, which is either an AggregationAudioItemListDocument or an AudioItemDocument",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "The type of search result, which is either an AggregationAudioItemListDocument or an AudioItemDocument",
                    "type": "string",
                    "enum": [
                        "audio",
                        "aggregation"
                    ]
                },
                "ifTypeAudio": {
                    "description": "NOT A TRUE PROPERTY. This is the schema of the SearchItemDocument for `type='audio'`",
                    "$ref": "#/definitions/AudioItemDocument"
                },
                "ifTypeAggregation": {
                    "description": "NOT A TRUE PROPERTY. This is the schema of the SearchItemDocument for `type='aggregation'`",
                    "$ref": "#/definitions/AggregationAudioItemListDocument"
                }
            }
        },
        "AdTrackingData": {
            "description": "All the information needed for the Sponsorship Service to send back tracking information to our external sponsorship provider",
            "required": [
                "adId",
                "event"
            ],
            "properties": {
                "adId": {
                    "description": "The DAAST Ad node `id` attribute value, (e.g. AdswizzAd12345)",
                    "type": "string"
                },
                "event": {
                    "description": "The user-interaction event to submit tracking for",
                    "type": "string",
                    "default": "start",
                    "enum": [
                        "start",
                        "firstQuartile",
                        "midpoint",
                        "thirdQuartile",
                        "complete"
                    ]
                }
            }
        },
        "UserAdData": {
            "description": "All information relevant to a user who has requested sponsorship or submitted tracking information",
            "properties": {
                "userAgent": {
                    "description": "An identifying string for the browser making the request. The server will attempt to grab this from the headers, so it probably does not need to be passed in the body unless you get back an error message stating that we were unable to determine a User-Agent from the request.",
                    "type": "string"
                },
                "ipAddress": {
                    "description": "The TCP/IP address of the client making the request. The server will attempt to grab this from the headers, so it probably does not need to be passed in the body unless you get back an error message stating that we were unable to determine an IP address from the request.",
                    "type": "string"
                },
                "listenerId": {
                    "description": "A client-designated unique identifier for the logged-in user, only used if neither an NPR.org public user ID nor an `X-Advertising-ID` header are available.",
                    "type": "string"
                }
            }
        },
        "AdTrackingDocument": {
            "description": "All the information needed for the Sponsorship Service to send back tracking information to our external sponsorship provider",
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "All the information needed for the Sponsorship Service to send back tracking information to our external sponsorship provider",
                            "$ref": "#/definitions/AdTrackingData"
                        },
                        "items": {
                            "description": "Not used",
                            "type": "array",
                            "items": {
                                "type": "null"
                            }
                        }
                    }
                }
            ]
        },
        "DAASTXml": {
            "description": "Please visit <a href='http://www.iab.net/DAAST' target='_blank'>http://www.iab.net/DAAST</a> for more information on the DAAST XML specification.",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "default": "1.0",
                    "xml": {
                        "attribute": true
                    }
                },
                "Ad": {
                    "$ref": "#/definitions/AdXml"
                }
            },
            "type": "object",
            "xml": {
                "name": "DAAST"
            }
        },
        "AdXml": {
            "properties": {
                "id": {
                    "type": "string",
                    "xml": {
                        "attribute": true
                    }
                },
                "InLine": {
                    "$ref": "#/definitions/InLineXml"
                }
            },
            "type": "object",
            "xml": {
                "name": "Ad",
                "namespace": "http://www.w3.org/2001/XMLSchema-instance"
            }
        },
        "InLineXml": {
            "properties": {
                "AdSystem": {
                    "type": "string"
                },
                "AdTitle": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Category": {
                    "type": "string"
                },
                "Impression": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImpressionXml"
                    },
                    "xml": {
                        "wrapped": false
                    }
                },
                "Creatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreativeXml"
                    },
                    "xml": {
                        "wrapped": true
                    }
                },
                "Extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "xml": {
                        "wrapped": true
                    }
                }
            },
            "type": "object"
        },
        "ImpressionXml": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "attribute": true
                    }
                }
            },
            "type": "string",
            "xml": {
                "name": "Impression"
            }
        },
        "CreativeXml": {
            "required": [
                "sequence"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "attribute": true
                    }
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "xml": {
                        "attribute": true
                    }
                },
                "Linear": {
                    "$ref": "#/definitions/LinearXml"
                },
                "CompanionAds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanionXml"
                    },
                    "xml": {
                        "wrapped": true
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "Creative"
            }
        },
        "LinearXml": {
            "properties": {
                "Duration": {
                    "type": "string"
                },
                "TrackingEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrackingXml"
                    },
                    "xml": {
                        "wrapped": true
                    }
                },
                "MediaFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MediaFileXml"
                    },
                    "xml": {
                        "wrapped": true
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "Linear"
            }
        },
        "TrackingXml": {
            "properties": {
                "event": {
                    "type": "string",
                    "default": "start",
                    "enum": [
                        "start",
                        "firstQuartile",
                        "midpoint",
                        "thirdQuartile",
                        "complete",
                        "creativeView"
                    ],
                    "xml": {
                        "attribute": true
                    }
                }
            },
            "type": "string",
            "xml": {
                "name": "Tracking"
            }
        },
        "MediaFileXml": {
            "properties": {
                "bitrate": {
                    "type": "integer",
                    "format": "int32",
                    "default": 320000,
                    "xml": {
                        "attribute": true
                    }
                },
                "type": {
                    "type": "string",
                    "xml": {
                        "attribute": true
                    }
                },
                "delivery": {
                    "type": "string",
                    "default": "progressive",
                    "xml": {
                        "attribute": true
                    }
                }
            },
            "type": "string",
            "xml": {
                "name": "MediaFile"
            }
        },
        "CompanionXml": {
            "properties": {
                "height": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "attribute": true
                    }
                },
                "width": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "attribute": true
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "xml": {
                        "attribute": true
                    }
                },
                "StaticResource": {
                    "$ref": "#/definitions/StaticResourceXml"
                },
                "TrackingEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrackingXml"
                    },
                    "xml": {
                        "wrapped": true
                    }
                },
                "CompanionClickThrough": {
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Companion"
            }
        },
        "StaticResourceXml": {
            "properties": {
                "creativeType": {
                    "type": "string",
                    "default": "image/jpeg",
                    "xml": {
                        "attribute": true
                    }
                }
            },
            "type": "string",
            "xml": {
                "name": "StaticResource"
            }
        },
        "ErrorXmlDocument": {
            "description": "One or more errors represented in a DAAST XML document",
            "required": [
                "version",
                "error"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "default": "1.0",
                    "xml": {
                        "attribute": true
                    }
                },
                "error": {
                    "type": "array",
                    "items": {
                        "description": "An individual error, presented in XML format",
                        "type": "string"
                    },
                    "xml": {
                        "wrapped": false
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "DAAST"
            }
        },
        "UserAdDocument": {
            "description": "All information relevant to a user who has requested sponsorship or submitted tracking information",
            "allOf": [
                {
                    "$ref": "#/definitions/CollectionDocument"
                },
                {
                    "properties": {
                        "attributes": {
                            "description": "All information relevant to a user who has requested sponsorship or submitted tracking information",
                            "$ref": "#/definitions/UserAdData"
                        },
                        "items": {
                            "description": "All the information needed for the Sponsorship Service to send back tracking information to our external sponsorship provider",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AdTrackingDocument"
                            }
                        }
                    }
                }
            ]
        }
    },
    "parameters": {
        "Authorization": {
            "name": "Authorization",
            "in": "header",
            "description": "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token.",
            "required": true,
            "type": "string"
        },
        "X-Advertising-ID": {
            "name": "X-Advertising-ID",
            "in": "header",
            "description": "A device-specific advertising identifier, if possible. Apple's IDFA is an example.",
            "required": false,
            "type": "string"
        },
        "channel": {
            "name": "channel",
            "in": "query",
            "description": "Determines the focus of the recommendations returned. Channel `npr` is recommended for most use cases.",
            "required": false,
            "type": "string",
            "default": "npr",
            "enum": [
                "npr",
                "followed",
                "recommended",
                "emailstories",
                "emailprograms",
                "lapsedusersemail",
                "ongoing email",
                "newscasts",
                "shows"
            ]
        }
    },
    "responses": {
        "Simple400": {
            "description": "A bad request; generally, one or more parameters passed in were incorrect or missing",
            "schema": {
                "$ref": "#/definitions/SimpleError"
            }
        },
        "Simple401": {
            "description": "The client credentials were invalid or the authorization server denied the request.",
            "schema": {
                "$ref": "#/definitions/SimpleError"
            }
        },
        "Simple500": {
            "description": "A server error",
            "schema": {
                "$ref": "#/definitions/SimpleError"
            }
        },
        "Simple503": {
            "description": "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "schema": {
                "$ref": "#/definitions/SimpleError"
            },
            "headers": {
                "Retry-After": {
                    "description": "The predicted time the system will be back up",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "400WithDocument": {
            "description": "A bad request; generally, one or more parameters passed in were incorrect or missing",
            "schema": {
                "$ref": "#/definitions/ErrorDocument"
            },
            "headers": {
                "X-RateLimit-Limit": {
                    "description": "The number of allowed requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Remaining": {
                    "description": "The number of remaining requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Reset": {
                    "description": "The number of seconds left in the current period",
                    "type": "integer"
                }
            }
        },
        "401WithDocument": {
            "description": "The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers.",
            "schema": {
                "$ref": "#/definitions/ErrorDocument"
            }
        },
        "429WithDocument": {
            "description": "The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps.",
            "schema": {
                "$ref": "#/definitions/ErrorDocument"
            },
            "headers": {
                "X-RateLimit-Limit": {
                    "description": "The number of allowed requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Remaining": {
                    "description": "The number of remaining requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Reset": {
                    "description": "The number of seconds left in the current period",
                    "type": "integer"
                }
            }
        },
        "500WithDocument": {
            "description": "A server error",
            "schema": {
                "$ref": "#/definitions/ErrorDocument"
            },
            "headers": {
                "X-RateLimit-Limit": {
                    "description": "The number of allowed requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Remaining": {
                    "description": "The number of remaining requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Reset": {
                    "description": "The number of seconds left in the current period",
                    "type": "integer"
                }
            }
        },
        "503WithDocument": {
            "description": "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
            "schema": {
                "$ref": "#/definitions/ErrorDocument"
            },
            "headers": {
                "Retry-After": {
                    "description": "The predicted time the system will be back up",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "IdentitySuccess": {
            "description": "The request was successful",
            "schema": {
                "$ref": "#/definitions/UserDocument"
            },
            "headers": {
                "X-RateLimit-Limit": {
                    "description": "The number of allowed requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Remaining": {
                    "description": "The number of remaining requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Reset": {
                    "description": "The number of seconds left in the current period",
                    "type": "integer"
                }
            }
        },
        "ListeningSuccess": {
            "description": "A list of audio items (recommendations)",
            "schema": {
                "$ref": "#/definitions/AudioItemListDocument"
            },
            "headers": {
                "X-RateLimit-Limit": {
                    "description": "The number of allowed requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Remaining": {
                    "description": "The number of remaining requests in the current period",
                    "type": "integer"
                },
                "X-RateLimit-Reset": {
                    "description": "The number of seconds left in the current period",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://api.npr.org/authorization/v2/authorize",
            "tokenUrl": "https://api.npr.org/authorization/v2/token",
            "scopes": {
                "identity.readonly": "See your personal information, such as your first name, last name, and favorite station.",
                "identity.write": "Update your personal information, such as your favorite station(s) or program(s) you follow, on your behalf.",
                "listening.readonly": "See your NPR One listening history and get audio recommendations.",
                "listening.write": "Record that you have heard, marked as interesting, and/or skipped NPR One stories in order to personalize future audio recommendations.",
                "localactivation": "Connect you with your local NPR member station for communication purposes."
            }
        }
    },
    "tags": [
        {
            "name": "authorization",
            "description": "The interface to our OAuth2 server"
        },
        {
            "name": "identity",
            "description": "The entry point to user-specific information"
        },
        {
            "name": "listening",
            "description": "Audio recommendations tailored to a user's preferences"
        },
        {
            "name": "localactivation",
            "description": "Connects users to their local stations"
        },
        {
            "name": "sponsorship",
            "description": "Sponsorship for non-NPR One client applications"
        }
    ],
    "externalDocs": {
        "description": "Learn more at the NPR One Developer Center",
        "url": "http://dev.npr.org"
    }
}
